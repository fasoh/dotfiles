set nocompatible " use vim not vi

" vim-plug. Call :PlugInstall, :PlugUpdate, :PlugClean
call plug#begin('~/.vim/plugged')

" Edit
  Plug 'tpope/vim-surround'         " Surround selections 
  Plug 'tpope/vim-commentary'       " Quick commenting

" Browsing
  Plug 'scrooloose/nerdtree'        " File explorer

" Git
  Plug 'airblade/vim-gitgutter'     " Show git diff in sidebar

" Languages
  Plug 'sheerun/vim-polyglot'       " Language Packs for syntax coloring

" Look & feel
  Plug 'joshdick/onedark.vim'       " Color Scheme
  Plug 'vim-airline/vim-airline'    " Bottom status bar
  Plug 'yggdroot/indentline'        " Show indendations
  Plug 'lilydjwg/colorizer'         " Preview colors inline
  Plug 'itchyny/vim-cursorword'     " Underline word below cursor

" To be added
  " Plug 'vim-syntastic/syntastic'  " Syntax checking
  " Plug 'mbbill/undotree'          " Visualize last edits
  " Plug 'valloric/youcompleteme'   " Autocompletion
call plug#end()

" Keybindings
:imap jk <Esc>
set timeoutlen=150

" Relative line numbers
set relativenumber
set number

" Allow line-breaking and word wrapping
set wrap
set linebreak

" Autoformats display line to new line
" set fo=tcrwa textwidth=80

" Allow mouse control
set mouse=a

" Search down into subfolders
" Provides tab-completion for all file-related tasks
set path+=**

" Display all matching files when we tab complete
set wildmenu

" Allow hjkl movement through wrapped lines
noremap <buffer> <silent> k gk
noremap <buffer> <silent> j gj
noremap <buffer> <silent> 0 g0
noremap <buffer> <silent> $ g$

" Toggle NERDTree
map <F5> :NERDTreeToggle<CR>

" Autoclose NERDTree if it is last open window
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" Set Atom color scheme and fix background color
syntax on
colorscheme onedark
let g:indentLine_char = '‚é∏'       " Use this char for indentations
let g:airline_powerline_fonts = 1 " Allow vim-airline to use Powerline Fonts
let g:airline_theme='onedark'
highlight Normal ctermbg=NONE
highligh nonText ctermbg=NONE

filetype plugin on

set ls=2            	" always show status line
set hlsearch        	" highlight searches
set incsearch       	" do incremental searching
set ruler           	" show the cursor position all the time
set visualbell t_vb=  " turn off error beep/flash
set ignorecase        " ignore case while searching
set ts=2							" set the tabs to two spaces
set expandtab
set shiftwidth=2
set tabstop=2
set backspace=indent,eol,start
set completeopt=longest,menu,preview
set autoindent
set scrolloff=5               " keep at least x lines above/below
set sidescrolloff=5           " keep at least x lines left/right
set hidden                    " this will go along"
set encoding=utf-8

" Set Enter to exit search highlighting
nnoremap <silent> <CR> :nohlsearch<CR>

" let mapleader = ","           " Remap leader to comma"
let base16colorspace=256

